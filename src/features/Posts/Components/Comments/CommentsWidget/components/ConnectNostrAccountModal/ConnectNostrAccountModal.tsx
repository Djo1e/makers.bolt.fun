import { motion } from "framer-motion";
import {
  ModalCard,
  modalCardVariants,
} from "src/Components/Modals/ModalsContainer/ModalsContainer";
import { IoClose } from "react-icons/io5";
import Button from "src/Components/Button/Button";
import { useAppDispatch } from "src/utils/hooks";
import { useState } from "react";

interface Props extends ModalCard {}

export default function ConnectNostrAccountModal({
  onClose,
  direction,
}: Props) {
  const dispatch = useAppDispatch();

  const [activeTab, setActiveTab] =
    useState<"extension" | "generated" | "inputted">("extension");

  return (
    <motion.div
      custom={direction}
      variants={modalCardVariants}
      initial="initial"
      animate="animate"
      exit="exit"
      className="modal-card !overflow-auto max-w-[522px] rounded-xl relative"
    >
      <div className="p-24">
        <IoClose
          className="absolute text-body2 top-24 right-24 hover:cursor-pointer"
          onClick={onClose}
        />
        <h2 className="text-h5 font-bold text-center">
          Connect your Nostr Account
        </h2>
      </div>
      <hr className="bg-gray-200" />
      <div className="flex flex-col gap-24 p-24">
        <p className="text-body4 text-gray-600">
          Choose how you wish to connect your account:
        </p>

        <ul className="flex rounded border overflow-hidden ">
          <li className="grow">
            <button
              className={`py-12 w-full text-center hover:bg-primary-25 active:text-primary-400 transition-shadow ${
                activeTab === "extension" &&
                "bg-primary-50 shadow-inner text-primary-600"
              }`}
              onClick={() => setActiveTab("extension")}
            >
              Extension
            </button>
          </li>
          <li className="grow">
            <button
              className={`py-12 w-full text-center hover:bg-primary-25 active:text-primary-400 transition-shadow ${
                activeTab === "generated" &&
                "bg-primary-50 shadow-inner text-primary-600"
              }`}
              onClick={() => setActiveTab("generated")}
            >
              Generated Keys
            </button>
          </li>
          <li className="grow">
            <button
              className={`py-12 w-full text-center hover:bg-primary-25 active:text-primary-400 transition-shadow ${
                activeTab === "inputted" &&
                "bg-primary-50 shadow-inner text-primary-600"
              }`}
              onClick={() => setActiveTab("inputted")}
            >
              Enter Manually
            </button>
          </li>
        </ul>

        {activeTab === "extension" && (
          <div className="flex flex-col gap-16">
            <h4 className="text-body3 font-bold text-gray-900">
              Use a Nostr Extension{" "}
              <span className="text-gray-400 text-body4 font-regular">
                (Desktop Only)
              </span>{" "}
            </h4>
            <p>
              There are several extension that you can add to your browser which
              will take care of storing your private key & signing your messages
              before publishing them.
              <br />
              <br />
              Extensions that support nostr:{" "}
              <a
                href="https://getalby.com/"
                className="text-blue-500"
                target="_blank"
                rel="noreferrer"
              >
                Alby
              </a>
              ,{" "}
              <a
                href="https://github.com/fiatjaf/nos2x"
                className="text-blue-500"
                target="_blank"
                rel="noreferrer"
              >
                nos2x
              </a>
              ,{" "}
              <a
                href="https://www.blockcore.net/wallet"
                className="text-blue-500"
                target="_blank"
                rel="noreferrer"
              >
                Blockcore
              </a>
            </p>

            <Button fullWidth color="primary">
              Connect to Extension
            </Button>
          </div>
        )}
        {activeTab === "generated" && (
          <div className="flex flex-col gap-16">
            <h4 className="text-body3 font-bold text-gray-900">
              Generated by Bolt.Fun
            </h4>
            <p>
              We generate a private key for you & store it in our database.
              <br />
              You can see the keys that we generated for your account in your
              profile settings in case you want to copy them & use them on other
              nostr clients
            </p>

            <Button fullWidth color="primary">
              Continue
            </Button>
          </div>
        )}

        {activeTab === "inputted" && (
          <div className="flex flex-col gap-16">
            <h4 className="text-body3 font-bold text-gray-900">
              Enter your own keys
            </h4>
            <p>
              You enter your <span className="font-bold">private key</span> & we
              will store it in your browser's localStorage.
              <br />
              It won't be sent anywhere, but please keep in mind that storing
              things in localStorage isn't that highly secure.
              <br />
              We are only providing this option for now until a better
              alternative appear for mobile browsers.
            </p>

            <Button fullWidth color="primary">
              Continue
            </Button>
          </div>
        )}
      </div>
    </motion.div>
  );
}
